

Important
*********

Bitflag $40: area switch
Disable closing cap: $00 to $03 for direction (in case of horizontal<>vertical transitions)
Need door ASM for incompatible transitions: 5631 bytes of free space
at $7EA00. Common routines will be places there. Store Door ASM after $7EB00.

Access Points
*************

Gather entry information from the door leading to it (ex: to get lower
mushrooms info, check green brinstar elevator door data):
- door transition direction
- room ID
- cap x/y
- screen x/y
- distance to spawn
- door ASM ptr : if non-0, it will have to be called with JSR if door ASM is needed

Additional info from access point room itself :
- X/Y position for Samus if incompatible transition : door ASM to write in free space and point to

For each accesspoint, at construction give :
- its own *exit* room ptr/door ptr
- *entry* samus X/Y for incompatible transition

Use vanilla transition array to get *entry* room/door ptr, then gather above infos and store them in
the access point.

Once AreaGraph is built, use InterAreaTransitions property to :
- overwrite src *exit* data with dst *entry* data: room ID, cap X/Y, screen X/Y
- depending on transition type (check compatibility with door transitions directions found),
  adapt transition direction and distance to spawn
  - if "natural" transition : keep everything from *entry* data
  - if "incompatible" transition :
    - set spawn distance to 0
    - H/V or V/V : keep *exit* data transition direction, but force non-closing cap variant
    - H/H : switch transition direction, with original door cap status
- adjust bitflag : in case of area transition, OR *entry* data one with 0x40. detect area
  transition by comparing areas in room headers.
- door ASM :
  - if "natural" transition : keep *entry* pointer
  - if "incompatible" transition :
    - write door ASM somewhere in free space that :
      - call *entry* door ASM routine if it existed
      - fix samus X/Y position
      - cancel movement and force standing pose

Here is the ASM template (remember everything is Little Endian !) :

DOOR = former door ASM ptr, skip these 3 bytes if there is none
--------
20 DO OR A9 XX XX 8D F6 0A A9 YY YY 8D FA 0A 20 00 EA 60
            -----             -----
           Samus X           Samus Y

.....

PROFIT !!
